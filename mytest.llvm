@reg1 = constant [6 x i8] c"wrong\00"
@reg3 = constant [6 x i8] c"right\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define void @main(){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
%reg0 = icmp eq i32 1, 2
br i1 %reg0, label %label_22, label %label_26
label_22:
%preg_1_1 = getelementptr [6 x i8], [6 x i8]* @reg1, i32 0, i32 0
call void @print(i8* %preg_1_1)
br label %label_29
label_26:
%reg2 = icmp eq i32 1, 1
br i1 %reg2, label %label_29, label %label_33
label_29:
%preg_2_1 = getelementptr [6 x i8], [6 x i8]* @reg3, i32 0, i32 0
call void @print(i8* %preg_2_1)
br label %label_33
label_33:
ret void
}
