@reg1 = constant [5 x i8] c"true\00"
@reg3 = constant [6 x i8] c"false\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define i32 @printb(i32){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
%reg0 = icmp eq i32 %0, 1
br i1 %reg0, label %label_22, label %label_36
label_22:
%preg_1_1 = getelementptr [5 x i8], [5 x i8]* @reg1, i32 0, i32 0
call void @print(i8* %preg_1_1)
br label %label_26
label_26:
br label %label_28
label_28:
br label %label_32
label_30:
br label %label_32
label_32:
%reg2 = phi i32 [1, %label_28], [0, %label_30]
ret i32 %reg2
br label %label_36
label_36:
%preg_2_1 = getelementptr [6 x i8], [6 x i8]* @reg3, i32 0, i32 0
call void @print(i8* %preg_2_1)
br label %label_40
label_40:
br label %label_44
label_42:
br label %label_46
label_44:
br label %label_46
label_46:
%reg4 = phi i32 [1, %label_42], [0, %label_44]
ret i32 %reg4
}
define void @main(){
label_51:
%lVars = alloca [50 x i32]
br label %label_54
label_54:
br label %label_56
label_56:
br label %label_60
label_58:
br label %label_60
label_60:
%preg_3_1 = phi i32 [1, %label_56], [0, %label_58]
%reg5 = call i32 @printb(i32 %preg_3_1)
%reg6 = icmp eq i32 1, %reg5
br i1 %reg6, label %label_65, label %label_67
label_65:
br label %label_69
label_67:
br label %label_69
label_69:
%reg7 = phi i32 [1, %label_65], [0, %label_67]
%reg8 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 %reg7, i32* %reg8
br label %label_74
label_74:
ret void
}
