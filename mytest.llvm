declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [22 x i8] c"Error division by zero"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
%lVars = alloca [50 x i32]
%reg0 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 3, i32* %reg0
%reg1 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 1
store i32 4, i32* %reg1
%reg3 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg2 = load i32, i32* %reg3
%reg5 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 1
%reg4 = load i32, i32* %reg5
%tmp = icmp slt i32 %reg2, %reg4
br i1 %tmp, label %label_26, label %label_28
label_26:
br label @
label_28:
