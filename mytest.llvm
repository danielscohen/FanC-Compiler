declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [22 x i8] c"Error division by zero"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define i32 @main(){
start:
%lVars = alloca [50 x i32]
%reg0 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 0, i32* %reg0
%reg1 = icmp eq i32 0, 0
br i1 %reg1, label %Div0, label %NotDiv0
Div0:
%temp = getelementptr [22 x i8], [22 x i8]* @divZeroText, i32 0, i32 0
call void @print(i8* %temp)
call void @exit(i32 0)
br label %NotDiv0
NotDiv0:
%reg2 = sdiv i32 3, 0

ret i32 0
        
}