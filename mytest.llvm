@reg5 = constant [10 x i8] c"a is true\00"
@reg6 = constant [11 x i8] c"a is false\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define void @main(){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
br label %label_21
label_21:
br label %label_25
label_23:
br label %label_27
label_25:
br label %label_27
label_27:
%reg0 = phi i32 [1, %label_23], [0, %label_25]
%reg1 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 %reg0, i32* %reg1
br label %label_32
label_32:
%reg3 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg2 = load i32, i32* %reg3
%reg4 = icmp eq i32 %reg2, 1
br i1 %reg4, label %label_39, label %label_37
label_37:
br label %label_39
label_39:
%preg_1_1 = getelementptr [10 x i8], [10 x i8]* @reg5, i32 0, i32 0
call void @print(i8* %preg_1_1)
br label %label_49
br label %label_49
label_44:
%preg_2_1 = getelementptr [11 x i8], [11 x i8]* @reg6, i32 0, i32 0
call void @print(i8* %preg_2_1)
br label %label_49
br label %label_49
label_49:
ret void
}
