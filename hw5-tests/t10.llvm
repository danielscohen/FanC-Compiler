@reg0 = constant [5 x i8] c"true\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define void @main(){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
br label %label_21
label_21:
%preg_1_1 = getelementptr [5 x i8], [5 x i8]* @reg0, i32 0, i32 0
call void @print(i8* %preg_1_1)
br label %label_26
br label %label_26
label_26:
%preg_2_1 = add i32 0, 1
call void @printi(i32 %preg_2_1)
br label %label_30
label_30:
ret void
}
