@reg2 = constant [5 x i8] c"abcd\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define void @main(){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
%reg0 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 0, i32* %reg0
br label %label_23
label_23:
%preg_1_1 = add i32 0, 123
call void @printi(i32 %preg_1_1)
br label %label_27
label_27:
%preg_2_1 = getelementptr [5 x i8], [5 x i8]* @reg2, i32 0, i32 0
call void @print(i8* %preg_2_1)
br label %label_31
label_31:
%reg4 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg3 = load i32, i32* %reg4
%reg5 = icmp slt i32 %reg3, 10
br i1 %reg5, label %label_36, label %label_49
label_36:
%reg7 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg6 = load i32, i32* %reg7
%preg_3_1 = add i32 0, %reg6
call void @printi(i32 %preg_3_1)
br label %label_42
label_42:
%reg10 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg9 = load i32, i32* %reg10
%reg11 = add i32 %reg9, 1
%reg12 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 %reg11, i32* %reg12
br label %label_31
label_49:
ret void
}
