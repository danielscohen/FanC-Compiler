@reg0 = constant [24 x i8] c"testing print functions\00"
@reg1 = constant [2 x i8] c"a\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@divZeroText = constant [23 x i8] c"Error division by zero\00"
define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}
define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}
define void @main(){
label_16:
%lVars = alloca [50 x i32]
br label %label_19
label_19:
%preg_1_1 = getelementptr [24 x i8], [24 x i8]* @reg0, i32 0, i32 0
call void @print(i8* %preg_1_1)
br label %label_23
label_23:
%preg_2_1 = getelementptr [2 x i8], [2 x i8]* @reg1, i32 0, i32 0
call void @print(i8* %preg_2_1)
br label %label_27
label_27:
%preg_3_1 = add i32 0, 1
call void @printi(i32 %preg_3_1)
br label %label_31
label_31:
%reg3 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
store i32 123, i32* %reg3
br label %label_35
label_35:
%reg5 = getelementptr [50 x i32], [50 x i32]* %lVars, i32 0, i32 0
%reg4 = load i32, i32* %reg5
%preg_4_1 = add i32 0, %reg4
call void @printi(i32 %preg_4_1)
br label %label_41
label_41:
ret void
}
